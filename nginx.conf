
# Simple Nginx configuration for reverse proxying to a Next.js app
# running in a Docker container on the same host.

events {
  worker_connections 1024;
}

http {
  # We need to set up a resolver for Nginx to be able to find the IP
  # address of the `app` service. We'll use the Docker's built-in DNS
  # server at 127.0.0.11.
  resolver 127.0.0.11;

  server {
    listen 80;
    server_name mydomain.com www.mydomain.com; # Replace with your actual domain

    # Optional: Redirect all HTTP traffic to HTTPS
    # location / {
    #   return 301 https://$host$request_uri;
    # }

    location ^~ /app/ {
      # The trailing slash on the proxy_pass URL is crucial.
      # It tells Nginx to replace the matched location prefix (/app/)
      # with the root of the upstream server (/).
      # For example: /app/about becomes /about when sent to the Next.js server.
      proxy_pass http://app:3000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # Optional: You can serve a static page or return a 404 for the root
    location / {
      return 404; # Nothing is served at the root
    }
  }
}
