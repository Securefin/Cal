
server {
    listen 80;
    server_name mydomain.com; # Replace with your domain

    # Optional: Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name mydomain.com; # Replace with your domain

    # SSL Configuration (replace with your actual certificate paths)
    ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Root location can serve a static page or redirect
    location = / {
        # Option 1: Show a simple "coming soon" or welcome page
        return 200 'Welcome! The application is at /app.';
        add_header Content-Type text/plain;

        # Option 2: Redirect to the app
        # return 302 /app/;
    }

    # This is the key location block for your Next.js app
    location /app/ {
        # The host and port must match what you exposed in docker-compose.yml
        proxy_pass http://localhost:3000/;

        # Standard proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Handle other locations or add general settings
    location / {
        # This handles requests for anything other than /app/
        # You can serve other content here or return a 404
        return 404;
    }
}
